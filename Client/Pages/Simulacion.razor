@page "/Simulacion"

@using System.Globalization

<div class="container mt-4">
    <h3 class="text-center mb-4">Simulación</h3>

    <!-- Controles superiores -->
    <div class="row mb-4">
        <div class="col-md-2">
            <label for="tasaInteres" class="form-label">Tasa de Interés (%)</label>
            <input type="number" class="form-control" id="tasaInteres" @bind="TasaInteres" />
        </div>
        <div class="col-md-2">
            <label for="numMeses" class="form-label">Número de Meses</label>
            <input type="number" class="form-control" id="numMeses" @bind="NumeroMeses" />
        </div>
        <div class="col-md-2">
            <label for="prestamo" class="form-label">Monto del Préstamo</label>
            <input type="number" class="form-control" id="prestamo" @bind="MontoPrestamo" />
        </div>
    </div>

    <!-- Resultados financieros -->
    <div class="row mb-4">
        <div class="col-md-4">
            <h5>Total a Pagar: @TotalPagar.ToString("C", CultureInfo.CurrentCulture)</h5>
        </div>
        <div class="col-md-4">
            <h5>Pago Mensual: @PagoMensual.ToString("C", CultureInfo.CurrentCulture)</h5>
        </div>
        <div class="col-md-4 text-end">
            <h5>Ganancias: @Ganancias.ToString("C", CultureInfo.CurrentCulture)</h5>
        </div>
    </div>

    <!-- Gastos de Compras y Compras -->
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-3">
                <div class="card-header bg-warning text-white">Gastos de Compras</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="conceptoGastoCompra" class="form-label">Concepto</label>
                        <input type="text" class="form-control" id="conceptoGastoCompra" @bind="ConceptoGastoCompra" />
                    </div>
                    <div class="mb-3">
                        <label for="precioGastoCompra" class="form-label">Precio</label>
                        <input type="number" class="form-control" id="precioGastoCompra" @bind="PrecioGastoCompra" />
                    </div>
                    <button class="btn btn-warning w-100" @onclick="AgregarGastoCompra">Agregar Gasto de Compra</button>
                </div>
            </div>
            <ul class="list-group">
                @foreach (var gastoCompra in GastosCompras)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @gastoCompra.Concepto: $@gastoCompra.Precio.ToString("F2")
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarGastoCompra(gastoCompra)">Eliminar</button>
                    </li>
                }
            </ul>
            <div class="mt-3">
                <h5>Total de Gastos de Compras: @TotalGastosCompras.ToString("C", CultureInfo.CurrentCulture)</h5>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card mb-3">
                <div class="card-header bg-success text-white">Compras</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="nombreCompra" class="form-label">Nombre de la Compra</label>
                        <input type="text" class="form-control" id="nombreCompra" @bind="NombreCompra" />
                    </div>
                    <div class="mb-3">
                        <label for="valorCompra" class="form-label">Monto</label>
                        <input type="number" class="form-control" id="valorCompra" @bind="ValorCompra" />
                    </div>
                    <div class="mb-3">
                        <label for="cantidadCompra" class="form-label">Cantidad</label>
                        <input type="number" class="form-control" id="cantidadCompra" @bind="CantidadCompra" />
                    </div>
                    <button class="btn btn-success w-100" @onclick="AgregarCompra">Agregar Compra</button>
                </div>
            </div>
            <ul class="list-group">
                @foreach (var compra in Compras)
                {
                    var totalCompra = compra.Valor * compra.Cantidad;
                    var porcentajeGasto = TotalCompras > 0 ? (totalCompra / TotalCompras) * 100 : 0;
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @compra.Nombre: $@compra.Valor.ToString("F2") x @compra.Cantidad = $@totalCompra.ToString("F2") (@porcentajeGasto.ToString("F2")%)
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarCompra(compra)">Eliminar</button>
                    </li>
                }
            </ul>
            <div class="mt-3">
                <h5>Total Compras: @TotalCompras.ToString("C", CultureInfo.CurrentCulture)</h5>
            </div>
        </div>
    </div>

    <!-- Gastos Administración -->
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-3">
                <div class="card-header bg-secondary text-white">Gastos Administración</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="nombreGasto" class="form-label">Nombre del Gasto</label>
                        <input type="text" class="form-control" id="nombreGasto" @bind="NombreGasto" />
                    </div>
                    <div class="mb-3">
                        <label for="valorGasto" class="form-label">Monto</label>
                        <input type="number" class="form-control" id="valorGasto" @bind="ValorGasto" />
                    </div>
                    <button class="btn btn-primary w-100" @onclick="AgregarGasto">Agregar Gasto</button>
                </div>
            </div>
            <ul class="list-group">
                @foreach (var gasto in Gastos)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @gasto.Nombre: $@gasto.Valor.ToString("F2")
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarGasto(gasto)">Eliminar</button>
                    </li>
                }
            </ul>
            <div class="mt-3">
                <h5>Total de Gastos Administración: @TotalGastos.ToString("C", CultureInfo.CurrentCulture)</h5>
            </div>
        </div>

        <!-- Activos -->
        <div class="col-md-6">
            <div class="card mb-3">
                <div class="card-header bg-info text-white">Activos</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="nombreActivo" class="form-label">Nombre del Activo</label>
                        <input type="text" class="form-control" id="nombreActivo" @bind="NombreActivo" />
                    </div>
                    <div class="mb-3">
                        <label for="valorActivo" class="form-label">Monto</label>
                        <input type="number" class="form-control" id="valorActivo" @bind="ValorActivo" />
                    </div>
                    <button class="btn btn-info w-100" @onclick="AgregarActivo">Agregar Activo</button>
                </div>
            </div>
            <ul class="list-group">
                @foreach (var activo in Activos)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @activo.Nombre: $@activo.Valor.ToString("F2")
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarActivo(activo)">Eliminar</button>
                    </li>
                }
            </ul>
            <div class="mt-3">
                <h5>Total de Activos: @TotalActivos.ToString("C", CultureInfo.CurrentCulture)</h5>
                <h5>Depreciación: @(TotalActivos / 60).ToString("F2")</h5>
            </div>
        </div>
    </div>
</div>


@code {
    // Variables para los cálculos
    private double TasaInteres { get; set; } = 5;
    private int NumeroMeses { get; set; } = 24;
    private double MontoPrestamo { get; set; } = 100000;
    private double TotalPagar => MontoPrestamo * Math.Pow(1 + (TasaInteres / 100), NumeroMeses / 12.0);
    private double PagoMensual => TotalPagar / NumeroMeses;
    private double Ganancias => TotalCompras - TotalGastos - TotalGastosCompras;

    // Listas de datos
    private List<(string Nombre, double Valor, int Cantidad)> Compras = new();
    private List<(string Nombre, double Valor)> Gastos = new();
    private List<(string Concepto, double Precio)> GastosCompras = new();
    private List<(string Nombre, double Valor)> Activos = new();

    // Totales
    private double TotalGastos => Gastos.Sum(g => g.Valor);
    private double TotalCompras => Compras.Sum(c => c.Valor * c.Cantidad);
    private double TotalGastosCompras => GastosCompras.Sum(gc => gc.Precio);
    private double TotalActivos => Activos.Sum(a => a.Valor);

    // Variables temporales para agregar elementos
    private string NombreGasto { get; set; }
    private double ValorGasto { get; set; }
    private string NombreCompra { get; set; }
    private double ValorCompra { get; set; }
    private int CantidadCompra { get; set; }
    private string ConceptoGastoCompra { get; set; }
    private double PrecioGastoCompra { get; set; }
    private string NombreActivo { get; set; }
    private double ValorActivo { get; set; }

    // Métodos para agregar elementos
    private void AgregarGasto()
    {
        if (!string.IsNullOrWhiteSpace(NombreGasto) && ValorGasto > 0)
        {
            Gastos.Add((NombreGasto, ValorGasto));
            NombreGasto = string.Empty;
            ValorGasto = 0;
        }
    }

    private void AgregarCompra()
    {
        if (!string.IsNullOrWhiteSpace(NombreCompra) && ValorCompra > 0 && CantidadCompra > 0)
        {
            Compras.Add((NombreCompra, ValorCompra, CantidadCompra));
            NombreCompra = string.Empty;
            ValorCompra = 0;
            CantidadCompra = 0;
        }
    }

    private void AgregarGastoCompra()
    {
        if (!string.IsNullOrWhiteSpace(ConceptoGastoCompra) && PrecioGastoCompra > 0)
        {
            GastosCompras.Add((ConceptoGastoCompra, PrecioGastoCompra));
            ConceptoGastoCompra = string.Empty;
            PrecioGastoCompra = 0;
        }
    }

    private void AgregarActivo()
    {
        if (!string.IsNullOrWhiteSpace(NombreActivo) && ValorActivo > 0)
        {
            Activos.Add((NombreActivo, ValorActivo));
            NombreActivo = string.Empty;
            ValorActivo = 0;
        }
    }

    // Métodos para eliminar elementos
    private void EliminarGasto((string Nombre, double Valor) gasto)
    {
        Gastos.Remove(gasto);
    }

    private void EliminarCompra((string Nombre, double Valor, int Cantidad) compra)
    {
        Compras.Remove(compra);
    }

    private void EliminarGastoCompra((string Concepto, double Precio) gastoCompra)
    {
        GastosCompras.Remove(gastoCompra);
    }

    private void EliminarActivo((string Nombre, double Valor) activo)
    {
        Activos.Remove(activo);
    }
}
